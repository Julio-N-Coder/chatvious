name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
    paths:
      - 'serverless-aws-sam/**'
      - '.github/workflows/pipeline.yaml'
  pull_request:
    branches: [ master ]
    paths:
      - 'serverless-aws-sam/**'
      - '.github/workflows/pipeline.yaml'

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: fakeAccessKeyId
      AWS_SECRET_ACCESS_KEY: fakeSecretAccessKey
      AWS_DEFAULT_REGION: us-west-1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Start DynamoDB Container
        run: docker run -d -p 8000:8000 amazon/dynamodb-local -jar DynamoDBLocal.jar -inMemory -sharedDb
      - name: Make DyanmoDB test table
        run: |
          aws dynamodb create-table \
            --table-name chatvious-test \
            --attribute-definitions \
                AttributeName=PartitionKey,AttributeType=S \
                AttributeName=SortKey,AttributeType=S \
            --key-schema \
                AttributeName=PartitionKey,KeyType=HASH \
                AttributeName=SortKey,KeyType=RANGE \
            --billing-mode PAY_PER_REQUEST \
            --table-class STANDARD \
            --endpoint-url http://localhost:8000
      - name: Install dependencies
        run: cd serverless-aws-sam/src && npm install
      - name: Run tests
        run: cd serverless-aws-sam/src && npm run test

  deploy:
    if: github.event_name == 'push'
    needs: tests
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-west-1
      PIPELINE_EXECUTION_ROLE: arn:aws:iam::580083607510:role/aws-sam-cli-managed-prod-pipe-PipelineExecutionRole-SYp54h0Q5SAR
      CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::580083607510:role/aws-sam-cli-managed-prod--CloudFormationExecutionRo-eFpAQSEjQd7o
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup Aws Sam
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - name: Setup Aws Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
          role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
          role-session-name: sam-deploy
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Install dependencies
        run: cd serverless-aws-sam/src && npm install && cd ..
      - name: Build
        run: cd serverless-aws-sam/ && sam build
      - name: Deploy
        run: |
          cd serverless-aws-sam/ && \
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
            --role-arn ${CLOUDFORMATION_EXECUTION_ROLE}